spring:
  profiles:
    active: dev # default profile
    group:
      dev:
        - common
      prod:
        - common
---
spring:
  config:
    activate:
      on-profile: common

jwt:
  secret-key: 2023-postype.sns-application-project.secret_key
  token.expired-time-ms: 2592000000

spring.mvc:
  pathmatch:
    matching-strategy: ant_path_matcher
springdoc:
  version: '@project.version@'
  api-docs:
    path: /api-docs
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  swagger-ui:
    operations-sorter: alpha
    tags-sorter: alpha
    path: /swagger-ui.html
    disable-swagger-default-url: true
    display-query-params-without-oauth2: true
    doc-expansion: none
  paths-to-match:
    - /api/**
---
spring:
  config:
    activate:
      on-profile: dev
  jpa:
    database: mysql
    hibernate:
      dialect: org.hibernate.dialect.MySQL8Dialect
      ddl-auto: update
    properties:
        hibernate:
          format_sql: true
    show-sql: true
  datasource:
    hikari.maximum-pool-size: 4
    url: jdbc:mysql://localhost:3306/sns_contents?rewriteBatchedStatements=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: root
    password: mysql123
    driver-class-name: com.mysql.cj.jdbc.Driver
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: sns
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    listener:
      ack-mode: MANUAL
    producer:
      key-serializer: org.apache.kafka.common.serialization.LongSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    template:
      default-topic: alarm
---
spring:
  config:
    activate:
      on-profile: prod
  jpa:
    database: MYSQL
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:mysql://${rds.hostname}:${rds.db.port}/${rds.db.name}
    username: ${rds.username}
    password: ${rds.password}
  kafka:
    bootstrap-servers: ${rds.hostname}:${rds.kafka.port}
    consumer:
      group-id: sns
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    listener:
      ack-mode: MANUAL
    producer:
      key-serializer: org.apache.kafka.common.serialization.LongSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    template:
      default-topic: alarm
server:
  port: 5000
